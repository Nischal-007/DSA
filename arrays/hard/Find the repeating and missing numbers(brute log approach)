vector<int> repeatedNumber(vector<int> &A) {
    int n = A.size();
    vector<int> ans(2, 0);

    // Sort the array â€” O(N log N)
    sort(A.begin(), A.end());

    for(int i = 0; i < n; i++) {
        // Check for duplicate
        if(i > 0 && A[i] == A[i-1]) {
            ans[0] = A[i];   // Duplicate number
        }

        // Check for missing number
        if(A[i] != i + 1 && ans[1] == 0) {
            ans[1] = i + 1;  // Missing number
        }
    }

    // Special case: if missing is N (last element)
    if(ans[1] == 0) {
        ans[1] = n;
    }

    return ans;
}


//Input:[3 1 2 5 3] 
//Output:[3, 4] 
//A = 3, B = 4
//space complexity=O(1)
//time complexity=O(N*log N)+O(N) ~ O(N*log N)
