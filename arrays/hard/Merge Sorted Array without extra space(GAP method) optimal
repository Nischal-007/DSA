void swapifgreater(long long nums1[],long long nums2[],int ind1,int ind2){
    if(nums1[ind1]>nums2[ind2]){
        swap(nums1[ind1],nums2[ind2]);
}
}

void merge(long long nums1[],long long nums2[],int m,int n){
    int len=m+n;
    int gap=(len/2)+(len%2);
    while(gap>0){
        int left=0;
        int right=left+gap;
        whiile(right<len){
            if(left<m && right>=0){
                swapifgreater(nums1,nums2,left,right-m);
            }else if(left>=m){
                swapifgreater(nums1,nums2,left-m,right-m);
            }else{
                swapifgreater(nums1,nums2,left,right);
            }left++,right++;
        }if(gap==1)break;
        gap=(gap/2)+(gap%2);
        }
}
//Time Complexity: O((m+n)*log(m+n))
//Space Complexity: O(1)
