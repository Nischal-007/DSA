class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int n=nums.size();
        int lb=lower_bound(nums.begin(),nums.end(),target)-nums.begin();
        int ub=upper_bound(nums.begin(),nums.end(),target)-nums.begin();
        if(lb==n || nums[lb]!=target) return {-1,-1};
        return {lb,ub-1};

    }
};
----------------------------------------------------------
//time complexity:O(log n)
//space complexity:O(1)
//if (lb==n) or (arr[lb]!=n) then that means that the target element is not found in the 
//array so basically checking if the target exists or not 
// first and last occurence are {lb,ub-1}
